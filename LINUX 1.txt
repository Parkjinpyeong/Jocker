※ Linux의 특징
* 권한을 갖는다.
  -소유권 / 허가권
* 다중사용자 환경을 지원한다.
  - Multi Tasking 및 Multi user mode를 지원
* 대 / 소문자를 구분한다.
* 확장자는 무관하고 파일명의 일부로 사용한다.
  - window에서 사용하는 확장자의 개념이 없다.

※ Prompt의 구조
1. Prompt란?
  - 명령어를 입력받아 실행될수 있는 상태
2. Linux Prompt
* 관리자 : [root@localhost ~]#
* 사용자 : [user@localhost ~]$
- [ , ] : Prompt의 구분기호(대괄호)
- root, user : 서버에 로그인한 계정명
- @ : 계정명과 서버이름의 구분기호
- localhost : 서버의 이름(HOSTNAME)
- ~ : 경로의 마지막 경로명을 출력
- #, $ : 계정상태 출력(관리자 - #, 사용자 - $)

/ = c드라이브
/boot = 부팅에 필요한 정보파일들의 경로
/bin : *.exe(실행파일들이 저장됨), 기본적인 명령어들의 경로(cd, ls...) <- 일반사용자도 사용가능한 명령어들
/sbin : *.exe(실행파일들이 저장됨), 시스템 운영/관리에 필요한 명령어들의 경로, 관리자용 명령어들의 위치 <- 관리자만 사용가능
/home = 일반 사용자들의 home direcroty가 저장되는 경로
폴더 - GUI 기반, 파일이 여러개 
디렉토리- CLI 기반, 안내책자, 데이터에 대한 정보만 보관, 정보만으로 데이터와 연결 시켜줌.
/etc - 매우 중요.각종 서버 설정에 필요한 모든 정보 파일들의 경로
remote device = 원격장치
swap : 가상메모리
-----------------------------------------------------------------------------------------------------------
ens 라인 inet이 ip주소

cd : 디렉토리 변경
pwd : 현재 위치를 보여달라.
뒤에 /를 붙이면 100% 디렉토리
cd ~ : root로 이동
cd ~계정id : 계정 id로 이동
※ 확인으로 시작해서 확인으로 끝내라!!



※ 명령어 [-옵션][서브옵션] [파일/디렉토리]

ifconfig,ip addr show : ip 확인
ip --help

pwd : 현재 작업중인 디렉터리 확인

cd : 디렉터리 변경
~ : 틸드, 계정의 홈디렉터리($HOME)를 의미
cd ~ : 자신의 디렉터리 변경
cd ~계정명 : 지정한 계정의 홈디렉터리로 변경
cd ../ : 이전 디렉터리로 변경

clear : 화면청소

ls : 디렉터리 내용 출력
ls -a : .(숨김)을 포함한 디렉터리의 모든 내용 출력
ls -l : 디렉터리의 내용을 자세히 출력
ls -n : 파일 및 디렉터리 정보 출력시 UID, GID(소유권)을 사용
ls -R : 하위 경로와 그안에 있는 모든 파일들도 같이 출력
ls -lF : 형식을 알리는 문자를 각 이름 뒤에 같이 출력
	없다 : 파일(허가권 맨앞이 ~)
	  /   : 디렉터리 명칭 맨뒤에 /가 붙는다(허가권 맨앞이 d)
	  ->, @ : symbolic link file(바로가기) 사본 -> 원본
 		 (허가권이 맨앞이 l, 허가권 모두가 활성화)
	   * : 파일명 뒤에 *이 붙으면 실행파일
ls -d : 디렉터리의 정보 출력

cp : 파일 복사/ 이름변경
	cp [-option] [source]  [source] . . .  [target]
* : wild card, 모든 것을 의미. 소스 디렉터리 마지막에 들어감.
cp -r : 디렉터리 복사(디렉터리 안의 파일 및 디렉터리 복사)

mv : 파일 및 디렉터리 이동 / 이름변경 명령어
rm : 삭제 명령어

touch  :  빈파일 생성 명령어
ex> touch a.txt  / touch /test/a.txt
cp : 복사 명령어
mv : 이동 명령어
rm : 삭제 명령어
==================================================================================
문제 : 디렉터리 생성 - /test/aaa 
        빈파일 생성 - /test/aaa/a.txt b.txt c.txt
        파일 이동 - /test/aaa/a.txt 를 /test/bbb 디렉터리 생성 후 이동
        파일 복사 - /test/aaa/b.txt 를 z.txt 로 복사
        파일 이동 - /test/aaa/z.txt 를 /test/bbb 디렉터리로 b.txt 로 이름 변경 및 이동
        파일 복사 - /test/bbb/a.txt를 /test/aaa 복사 할때 b.txt 로 이름 변경 및 이동
         
        파일 삭제 - /test/bbb 안에 있는 파일 하나씩 삭제 해 보세요 
        디렉터리 삭제 - /test/bbb 삭제 
       
        파일 및 디렉터리 강제 삭제 - /test/aaa 삭제
rm -rf : r - 디렉터리 / f - 강제(force)
-----------------------------------
풀이 : 

mkdir /test/aaa -p
touch : 빈파일 생성 명령어 / 수정 시간 변경
- 파일이 없으면 파일을 생성 파일이 있으면 수정 시간 변경
cd /test/aaa
touch a.txt b.txt c.txt 
- 한꺼번에 생성이 가능 하다
ex> mkdir /test/aaa /test/bbb /test/ccc

mkdir /test/bbb
mv a.txt /test/bbb
cp b.txt z.txt
mv z.txt /test/bbb/b.txt
cp /test/bbb/a.txt ./b.txt

rm /test/bbb/a.txt
빈파일 ? y
- 강제 아닌 경우는 삭제여부를 물어본다.
rm /test/bbb/b.txt
빈파일 ? y

rm -r /test/bbb
디렉털 삭제 ? y
rmdir : 비어 있지 않으면 삭제가 되지 않는다.
rm -r : 비어 있지 않아도 삭제는 가능 삭제여부 물어본다.
rm -rf : 비어 있지 않아도 삭제 가능 삭제여부를 묻지 않는다.

rm -rf /test/aaa

===================================================================================
alias : 별칭(별명)을 이용하여 명령어를 변경하는 명령어
- 터미널(세션)이 종료되면 alias로 매칭된 명령어도 종료된다.
- 세션당 별칭(별명)을 사용할 수 있다. 

1 : clear
2 : ls
3 : ls -l
4 : mkdir
5 : mkdir -p
6 : rm
7 : rm -r
8 : touch
====================================================================================
- mkdir /zzz
- mkdir -p /zzz/yyy/xxx
- touch /zzz/a.txt
- rm /zzz/a.txt
- rm -r /zzz
- clear 
- ls
- ls -l

풀이 

alias 1=clear
alias 2=ls
alias 3='ls -l'
alias 4=mkdir
alias 5='mkdir -p'
alias 6=rm
alias 7='rm -r'
alias 8=touch

4 /zzz
5 /zzz/yyy/xxx
8 /zzz/a.txt
6 /zzz/a.txt
7 /zzz
1
2
3
====================================================================================
cat : 파일 전체 내용 출력

head : 파일 위 부분부터 10줄까지 출력
tail :  파일 밑 부분 부터 10줄까지 출력
옵션 : -n 수 : 출력할 줄 수 지정
         -수   : 출력할 줄 수 지정

more : 파일 전체 내용을 페이지 별로 출력
          - 스페이스바 : 한페이지씩 출력
          - 엔터 : 한 줄씩 출력

less : 파일 전체 내용을 검색 및 출력이 자유롭다.

nl : 파일 전체 내용을 출력 - 라인번호 출력도 같이 출력
===================================================================================
/etc/services : 파일이 있는데 길어요 
- cat / more / head / tail / less / nl

========================
date : 현재 날짜 시간을 확인
date 월일시간분년도 : 일자 변경
ex> date 030120502017 : 2017. 03 .01 20:50 

rdate -s time.bora.net : 현재 시간을 동기화 (KST) 

cal : 달력 출력
cal 년도 : 1년 달력 출력
========================
find : 찾기 명령어

-name : 파일의 이름 *
-user : 파일의 소유자 *
-perm : 파일의 권한
-size : 파일의 사이즈 *
** k : kbyte / b : 512kbyte / c : byte / w : 2byte
-group : 파일의 소유 그룹
-uid : 사용자 아이디로 찾기
-gid : 그룹 아이디로 찾기
-atime : 접근 시간으로 찾기
-mtime : 수정 시간으로 찾기
-ctime : 권한 변경 시간으로 찾기
-maxdepth : 하위 디렉터리 갯수

실행 옵션 
- exec : 찾은 파일을 대상으로 명령을 실행시키는 옵션 - 확인안한다.
- ok : 찾은 파일을 대상으로 명령을 실행시키는 옵션 - 확인 한다.

find /etc -name "*.conf" -exec cp {} ./ \;
- {} : 찾은 파일이 대상이 된다.

cp /etc/a.conf ./
cp { find로 찾은 파일 } ./
- /etc/a.conf 을 현재 디렉터리에 복사

find /etc -name "*.conf" -ok cp {} ./ \;
- 찾은 대상을 실제로 실행할지의 여부를 확인 한다.
====================================================================================
문제 : find 를 이용해서 설정

/zzz 디렉터리 있는 파일 중에 net 가 포함되어 있는 파일을 /yyy 에 이동
- exec 

풀이 :
find /zzz -name "*net*" -exec mv {} /yyy \;

*net* : net가 포함된 파일 
*.net* : 모든.net모든 [abc.netaaa]
net* : net으로 시작하는 모든 파일
===================================================================================
시스템 종료 / 재시작  / 로그아웃

로그아웃 : cli 에서만 가능
- exit
- logout
- ctrl + d

CLI : Command Line interface :  명령줄 
CUI : Character User interface : 문자입력 사용자 
GUI : Graphic User interface : 아이콘 클릭 

시스템 종료 
init 0 : 시스템 명령어 - 명령어 입력 즉시 종료 
poweroff : 사용자 명령어 - 명령어 입력 즉시 종료 
shutdown -h : 사용자 명령어 - 분을 지정하여 종료 시간을 정할 수 있다.

시스템 재시작
init 6 : 시스템 명령어 - 명령어 입력 즉시 재시작
reboot : 사용자 명령어 - 명령어 입력 즉시 재시작 
shutdown -r : 사용자 명령어 - 분을 지정하여 재시작 시간을 정할 수 있다.

rename [기존문자] [변경할문자] [파일위치]

ex > rename .txt .doc ./*
rm -rf /aaa


mkdir : 디렉터리 생성
mkdir -p : 디렉터리 생성시 상위 디렉터리가 없을 경우 상위디렉터리도 생성

rmdir : 디렉터리 삭제
- 빈 디렉터리만 삭제 가능
rmdir -p : 디렉터리 삭제시 지정한 최상위 디렉터리까지 삭제 시도

./ : 현재위치
.. , ../ : 상위 디렉터리

* 상대경로 사용 시 스페이스 바 만해도 현재위치에서 사용.

0 : 빈파일 생성 / 수정 시간 변경
- 파일이 없으면 파일을 생성, 파일이 있으면 수정 시간 변경
rm -rf : 디렉터리(파일) 강제 삭제
- 삭제 여부를 물어보지 않음
rm -r : 디렉터리(파일) 삭제
※ 기억해둘 것(시험에 잘나옴)
rm -i : 파일 삭제 물어봄.
rm -f : 파일 삭제 알물어봄
home :
etc : 시스템 설정
var : 로그가 쌓이는 곳

alias : 별칭, 별명을 이용하여 명령어를 변경하는 명령어
- 터미널(세션)이 종료되면 alias로  매칭된 명령어도 종료됨
- 세션 당 별칭(별명)을 사용할 수 있음.

bashrc 설명이 필요하다.

cat : 파일 전체 내용을 출력(ex. cat /etc/passwd)
      파일의 내용 입력(ex. cat /etc/passwd > /testfile)
      파일 '생성' (ex. cat > ./test => 내용입력 => ctrl+d(정상종료)
                      ctrl+c(강제 종료), ctrl+z(강제 정지)
      파일의 내용 '추가' (ex. cat >> ./test => 내용입력 => ctrl+d)
      파일의 내용 '병합' (ex. cat ./a ./b > ./c)
head : 파일 위 부분부터 10줄 출력
head -n 숫자 : 파일 위에서부터 숫자만큼의 줄을 볼 수 있다.
tail : 파일 밑부분 부터 10줄 출력
tail -n 숫자 : 파일 밑에서부터 숫자만큼의 줄을 볼수 있다.
more : 파일 전체 내용을 페이지 별로 출력
         (enter : 한줄씩, space bar : 한페이지씩), 위아래 조절 불가
less : 파일 전체 내용을 검색 및 출력이 자유롭다. 위아래 조절 할수 있다.
        빠져나오는 키(q), /찾고자 하는 글(찾고자 하는 글을 찾을 수 있다.)
nl : 파일 전체 내용을 출력(라인 번호도 같이 출력)
date : 현재 날짜,시간 알려줌
date 월일시간년도 : 지정한 날짜로 변경됨.
rdate -s time.bora.net : 현재 시간을 동기화(KST)
cal : 달력 출력
cal 년도 : 1년 달력 출력

find : 찾기 명령어
     -name : 파일 or 디렉터리이름  *
     -user : 소유자  *
     -perm : 파일의 권한
     -size : 파일의 사이즈  *
        k / kbyte / b : 512kybyte / c : byte / w :2byte
     -group : 파일의 소유 그룹
     -uid : 사용자 아이디로 찾기
     -gid : 그룹 아이디로 찾기
     -atime : 접근 시간으로 찾기
     -mtime : 수정 시간으로 찾기
     -ctime : 권한 변경 시간으로 찾기
     -maxdepth : 파위 디렉터리 개수

실행 옵션
- exec : 찾은 파일을 대상으로 명령을 실행시키는 옵션 (확인x)
- ok : 찾은 파일을 대상으로 명령을 실행시키는 옵션 (확인o)
===========================================
find /etc -name *.conf -exec cp {} ./ \;
 - {} : 찾은 파일이 대상


*net* : net이 포함된 파일
*.net* : 모든.net모든 ex) abc.netaaa
net* : net으로 시작하는 모든 파일
=============================================
  로그아웃 :cli 에서만 가능
-exit
-logout
-ctrl + d

* CLI : Command Line interface : 명령줄
* CUI : Characher User interface : 문자입력 사용자
* GUI : Graphic User interface : 아이콘 클릭

  시스템 종료
- init 0 : 시스템 명령어 - 명령어 입력 즉시 종료
- poweroff : 사용자 명령어 - 명령어 입력 즉시 종료
- shutdown -h now : 사용자 명령어 - 분을 지정하여 종료 시간을 정할 수 있음.
- halt

  시스템 재시작
- init 6 : 시스템 명령어 - 명령어 입력 즉시 재시작
- reboot : 사용자 명령어 - 명령어 입력 즉시 재시작
- shutdown -r now: 사용자 명령어 - 분을 지정하여 (시:분  <-24시 기준),(+ 분)

shutdown -c : shutdown 명령어 취소
rename : [기존문자] [변경할 문자] [파일위치] 다수의 이름 변경 가능
      ex) rename .txt .doc ./*


  ※ VI(문서 열기) ※
w(forward) 
- 왼쪽에서 오른쪽으로 이동(W)
-단어의 처음으로 이동(W)
특수기호 인식
공백 인식(W)

b(backward)
-오른쪽에서 왼쪽으로 이동(B)
특수기호 인식
공백 인식(B)
단어의 처음으로 이동(B)

e(end)
단어의 끝으로(E)
공백 인식(E)
특수기호 인식
왼쪽에서 오른쪽(E)

gg, [[ : 문서의 처음 줄
G, ]] : 문서의 마지막줄
$ : 줄의 마지막
^ : 줄의 처음
H : 화면의 맨위으로 이동
M : 화면의 중간으로 이동
L  : 화면의 마지막으로 이동
i : 글자 삽입

책갈피(1회성)
-설정 : m+a~z,A~Z
-이동 : `+a~z,A~Z
마지막위치 이동 : ``

A => 줄의 제일 마지막에서부터 글자 삽입
I => 줄의 제일 처음에서부터 글자 삽입
o =>  밑에 줄하나 생성
O => 위에 줄 하나 생성
s => 커서 글자 삭제 후 입력
S => 행 삭제 후 입력

r => 커서가 위치한 곳 글자 변경
R => 수정모드
x => 커서내용지우기, 우측 글이 다 지워지면backspace bar처럼 움직임
X => backspace bar처럼 움직임
dd => 행자체가 지워짐
숫자 + dd => 숫자만큼 행이 지워짐
yy => 행 복사
p => 커서의 밑의 줄에 붙여넣기
P => 커서의 위에 줄에 붙여넣기
D => 행의 커서 뒤 글자 전부 삭제
u => 되돌리기
/ 글자 => 해당글자 찾기
  -n => 아래 방향다음글자
  -N => 위 다음글자
? 글자 => 해당글자 찾기
   -n => 위방향다음 글자
   -N => 아래방향 다음 글자
:q or :q! => vi 종료
:set (no)nu => 행번호 붙이기(삭제) 
   
  ※치환방법
-  :[범위]s/[기존문자]/[새로운문자]
ex. :5s/passwd/itbank       => 5번째 행 passwd를 itbank로 치환
ex. :20,23s/passwd/itbank  => 20번째~23번째 행 passwd를 itbank로 치환
ex. :%s/ 		        => 문서 전체 치환
ex. :62s/i/a/g	        => g : 행의 중복 문자 치환
:.!ifconfig => 현재 커서 위치에 ip값을 입력
ctrl+w+n => 창 수평 나누기
ctrl+w+w => 창 간 이동
ctrl+w+o => 커서가 있는 창을 제외한 모든창 닫기
:f => 파일정보 확인
:!ls -l => 현 디렉터리에 같이 있는 파일 확인
:e  => 파일 열기
:enew => 빈문서 생성
:wq   => 저장 후 종료
>>   =>  추가
:[n]r 파일 => 파일의 내용을 현재 편집중인 파일의 n라인 다음줄부터 삽입
:[n]r! cmd => cmd의 결과를 현재 편집중인 파일의 n라인 다음줄부터 삽입
:n => 커서를 n행으로 변경
===================================================================================

/etc/passwd             사용자 정보
/etc/shadow             사용자의 비밀번호
/etc/group               그룹의 정보
/etc/gshadow            그룹의 비밀번호
/home/  => $HOME   일반 사용자 생성, 사용자의 홈 디렉터리
/var/spool/mail         사용자의 메일
/etc/skel/                 사용자 생성 뼈대 있는 곳           
-m  -k or -mk  : 사용자 지정 skel 

====================================================================================
tail -6 /etc/passswd 
itbank     :       x:       1000    : 1000    :    dust      :   /home/itbank  : /bin/bash
사용자 구분자  PW      UID(-u)  GID(-g)  COMMENT(-c)   $HOME(-d)    shell(-s)
						              (명령어 해석기,ex)window os)
====================================================================================
※ linux shell(# cat /etc/shells)
/bin/sh          : 최초로 개발된 쉘(bourne)본쉘, 복구 기본쉘
/bin/bash       : 리눅스에서 가장 많이 사용하고 있는 쉘,
                     오픈소스 기본응용쉘(bourne-again shell)
/sbin/nologin  : 로그인되지 않는 것, 시스템 쉘
* sbin = 윈도우 시스템에 관련
/bin/csh        : c 쉘, c language전용 기능 쉘
/bin/tcsh       : 확장 c쉘, tomvat(java)확장 기능 쉘
====================================================================================
tail -6 /etc/shadow
itbank:$6$gicHu567$4dZc8e28FM1kAeu7O58QdPaexgfsV/4wOMWiM2X3zJRY55CPcu                           
           pw 암호화(sha512모델)
4AOERScJ1l97nNLTP7p17JJJiXrKblHG6IF.::      0:               99999:              7                        :                        :                 :
                                                  pw변경가능일  pw사용가능일  pw만료경보일   pw만료시 id사용 유무   id만료일지정
tail -6 /etc/group
itbank :  x   :  1000 :
그룹id  pw     GID    그룹사용자

tail -6 /etc/gshadow
itbank :    !     :          :
그룹id  임의값   관리자  멤버
====================================================================================
useradd : 사용자추가
useradd -D : 
userdel : 사용자 정보만 삭제(데이터는 유지)
userdel -r : 사용자 데이터까지 삭제
passwd : 자기자신 pw변경
passwd 사용자id : 사용자id pw 변경(관리자만 가능)

groupadd 그룹명 : 그룹생성
groupadd -g 숫자 : 원하는 그룹번호
groupdel 그룹명 : 그룹삭제

<3.31>
디렉터리 max권한값 : 777                 관리자(root)      d1생성         755         777-755    =  022(umask)
(권한)(일반사용자)(그외사용자)          사용자(itbank)   d2생성         775         777-775    =  002(umask) 
파일 max권한값 : 666                       관리자(root)      f1생성         644         666-644   =  022(umask)
                                                    사용자(itbank)    f2생성         664         666-664    =  002(umask)    
umask : 파일 및 디렉터리 생성시 기본적으로 적용될 사용 권한
r= 4(읽기)w=2(쓰기) x=1(접근)

gzip,bzip2, xz : 압축
  1. 용량 ↓
  2. 원본유지 X
  3. 단일 파일만 가능

gzip,bzip2, xz -d : 압축풀기

tar : 보관 (경로 자체 그대로 보관) 
        tar [option] [archiving_file name.tar] [source]
	c → 보관
	v → 작업과정 자세히 출력
	f → file
	x → 보관 해체
	t → 목록보기 
  1. 용량이 ↑(기본용량 10kb)
  2. 원본유지 O
  3. 다중파일 가능

보관&압축                 보관저장위치       보관파일위치
tar cvf    z → gzip       [file_name.tar.gz]  [source]
	j → bzip2		           bz2
	J → xz		           xz
보관&압축풀기
tar xvf    z → gz       [file_name.tar.gzip]  
	j → bz		        bzip2
	J → xz		         xz
====================================================================================
현재 위치(~itbank)에 있는 3개파일 grub.cfg, inittab, login.defs를 
보관파일명 gil.tar로 보관
 => tar cvf gil.tar ./grub.cfg ./inittab ./login.defs

현재 위치(~itbank)에 있는 gil.tar.gz를 제외한 모든 파일 삭제.
 => rm -i ./

/backup/ 디렉터리의 모든 파일 삭제
 => rm -f /backup/*

itbank에 있는 gil.tar 파일을 /backup/에 파일3개가 나타나도록
 =>cd /backup/
 => tar xvf ~itbank/gil.tar

/usr/bin/ 디렉터리를 /home/ 디렉터리에 binlist.tar.gz, bz2, xz 파일로 압축
 => tar cvfz /home/binlist.tar.gz /usr/bin
 => tar cvfj /home/binlist.tar.bz2 /usr/bin
 => tar cvfJ /home/binlist.tar.xz /usr/bin

/home/에 생성한 binlist.tar.xz를 이용해서 /export/에 압축을 풀기 (작업위치 ~itbank)
 => tar xfzC /home/binlist.tar.gz /export/
or tar xfz /home/binlist.tar.gz -C /export/

====================================================================================
man 명령어 (리눅스 마스터 시험에 나옴) : 한글판 설명서

※ rpm 명령어
 rpm -qa   |  grep [패키지명]                 : 확인
    * | = 오른쪽에서 왼쪽으로 명령어 인식
rpm -ivh [--nodeps] [패키지명..... .rmp]   : 설치
rpm -e  [--nodeps] [패키지명]               : 삭제 

※rpm공식(유의사항)
1. 모든작업은 반드시 동일한 버전이여야 한다.
2. 의존성 오류(Failed dependencies)를 절대 무시하지 말자   
* 삭제시 :needed 기준으로 오른쪽만 ,설치시 : needed 기준으로 왼쪽만
3. 의존성을 제기한 패키지를 먼저 작업한다.
4. 가급적 의존성 무시(--nodeps)를 사용하지 말자.
5. 'lib'로 시작하고 중간에 '.so'가 있는 경우는 무시해도 된다. 
6. 디렉터리로 시작하는 것들(/usr/bin/)은 패키지가 아니므로 무시한다.
7. 대표 패키지 부터 작업한다.
8. 나머지는 화면에 보이는 순서대로 작업한다.

※ yum
 yum [-y] update  : 업데이트
 yum [-y] install [패키지명][*] : 설치
 yum [-y] remove [패키지명][*] : 삭제
 *삭제는 yum을 사용하지말고 rpm을 이용해서 삭제
  의존성 관련 패키지 삭제 우려 있음.

※ 유의 사항
1. 인터넷이 연결되어야만 사용 가능.
2. 설치할 패키지명과 비슷한 파일이 없는 곳에서 작업한다.

4.1

HDD & PARTITION
작업 -> 순차적
삭제 -> 역순

PRIMARY PARTITION	   1	2	3	4	3	3

EXTENDED PARTITION  	   0	0	0	0	1	1
MAX:1			 

logical partition		  0	0	0	0	2	3
- 5번부터 시작
max : 무한

HDD TYPE
IDE(병렬)
hd+문자 : hda, hdb, hdc(cd-rom 사용 	불가), hdd 등
hd+문자+숫자 : hda1, hde4, hdf9 등


MBR(512BYTE) 시스템정보, 파티션 정보,
BR : 각각의 파티션의 정보(16byte)
PATITION TABLE (64byte)

fdisk(하드 추가시 명령어)
d : 파티션 삭제
m : 도움말
n : 파티션 추가
p : 확인
q : 저장하지 않고 종료
w : 저장후 종료
* 작업은 하드를 파티션 나눠서

fdisk -l : 하드 목록보기
mkfs : 파일시스템 만들기
======================================================

하드를 s/w에 인식시키는 과정 : mount
사용자는 s/w를 통해 하드를 제어.
#mount 장치 /mp

※ mount 시 유의 사항
1. Mount point는 임의의 디렉터리여야 한다.
   '사용자' 및 '시스템'과 관련된 디렉터리를 mount point로 지정해서는 절대 안된다.
2. umount명령시 경로는 현재 마운트된 디렉터리만 아니면 어떤 곳이던 상관없다.
3. 한 개의 파티션은 반드시 한개의 mount point만 사용한다.
4. 마운트시 작업할 대상은 반드시 파티션(primary, Logical)만 대상이 된다.
   하드디스크와 확장파티션(Extended)은 작업 대상이 될수 없다.
 * 포맷(mkfs.xfs 하드명) 후 mount 시킨다.



※ grub에 비번설정
1. /etc/grub.d/00_header에 아래와 같이 설정
   cat << EOF
   set superusers="grubadmin"
   password grubadmin 1234
   EOF
2. gurb2-mkconfig -o /boot/grub2grub.cfg로 재부팅
3. 재부팅 후 확인

  UID         PID      PPID     C      STIME       TTY           TIME       CMD
사용자	 process  Parent   CPU     start     Terminal      작업시간    명령어
	     ID       PID	          time
   1	     4		 5	2	3	   5	    4
              (컴퓨터)						  (사람)
사용자(1)가 해당시간(2)에 3을 통해 접속후 명령어(4)로 작업한 시간이(5)이고 
이때 CPU 점유율은 6만큼이다

ps -ef, top, pstree -pn : 프로세스 확인


메시지 보내기 : write 상대방 tty (1대1)
                    wall " 하고싶은말" (서버 안 모든사람)
메시지 종료 : ctrl+d

killall -u 계정명 : 메시지 종료

login.defs : 계정설정파일
grub.cfg : grub 설정파일
inittab

/runlevel0.target -> poweroff.target     파워종료
/runlevel1.target -> rescue.target        안전모드로 이동
/runlevel2.target -> multi-user.target  
/runlevel3.target -> multi-user.target    그래픽을 제외한 텍스트방식
/runlevel4.target -> multi-user.target
/runlevel5.target -> graphical.target      그래픽방식
/runlevel6.target -> reboot.target

※ 분실된 관리자 비번 재설정
1. 부팅시 or 재부팅시 grub mode에서 최신 커널을 선택 후 알파벳 'e'를 누른다.
2. linux16까지 간후 end를 눌러 rhgb까지 지운후 init=/bin/bash, 앞쪽에 ro를 rw로
   변경 후 ctrl+x를 눌러 부팅한다.
3. 비번 변경(passwd 계정명)
4. exec /sbin/init으로 재부팅한다.

정상환경
확인 : systemctl get-default
변경 : systemctl set-default target(대상).target

복구모드
ln -sf /lib/systemd/system/target.target /etc/systemd/system/default.target

그래픽 환경
ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target

/etc/systemd/system/default/
ln -sf /lib/systemd/system/graphical.target  /etc/systemd/system/default.target
ls -l /etc/systemd/system/default/target