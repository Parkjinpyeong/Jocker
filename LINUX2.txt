공인 IP Address : IPv4 = 8bit 짜리 4로 구성(4개의 octat) = 총 32bit
1개의 octat(2^0 부터 2^7)은 255까지.
d클래스나 e클래스는 방송이나 연구용으로 사용
bit 신호를 0을 주면 사용 안한다. 1을 주면 사용한다.
Aclass : 2^7(첫번째 bit)은 0으로 고정, 0.0.0.0~127.0~255.0~255.0~255,첫번째 octat(8bit)을 network ID로 사용, 나머지를 HOST ID로 사용(국가 단위 할당)
Bclass : 2^7(첫번째 bit)은 1, 2^6(두번째 bit)은 0으로 고정,128~191.0~255.0~255.0~255, 두번째 octat(16bit)까지 network ID, 나머지 HOST ID로 사용(대도시 할당)
Cclass : 2^7(첫번째 bit)은 1, 2^6(두번째 bit)은 1, 2^5(32)는 0으로 고정, 192~223.0~255.0~255.0~255, 세번째 octat(24bit)까지 network ID, 나머지 HOST ID로 사용(대기업 할당)
소속 그룹 : network id(ex. 192.168.8.*)
식별자 그룹 : host id(ex.*.*.*149)

NETMASK
사용하는 network id 비트값을 더한다.(Aclass : 255.0.0.0, Bclass : 255.255.0.0, Cclass : 255.255.255.0)
prefix 표시 : network bit수를 더한다.(어디까지 network까지인지 알려준다. ex.192.168.8.149/24)

사설 ip : 공인 ip를 자유롭게 사용할수 있게 한 ip대역
A class : 10.0.0.0 ~ 10.255.255.255
B class : 172.16.0.0 ~ 172.31.255.255
C class : 192.168.0.0 ~ 192.168.255.255

		고정 ip(static)		유동ip (vm ware)
	    192.168.1.0 : network id           192.168.1.0 : network id
		    1~253 : host id	           1 : vm net 장치 주소
		    254 : gateway			2 : gateway
		    255 : broadcast		3~254 : host id
     (라우터 전 같은 망을 사용하는 구간)		255 : broadcast
   	     사용 가능한 ip는 253개		  사용 가능한 ip는 252개

※ 명령어

ifconfig : NIC 정보를 확인(NIC = Network Interface card,= ethernet card, 통신을 하기 위한 장치, 랜카드와 비슷)
ifconfig [interface] [up / down] : 지정한 인터페이스 장치의 활성 / 비활성
ifconfig [interface] [IP Address] : 지정한 인터페이스 장치의 ip정보 변경(일시적 변경)
ip 수동설정 방법 : /etc/sysconfig/network-scripts 경로에 있는 ifcfg-[interface] 형식의 파일 편집(vi)로 가능
                      interface 명칭은 ifconfig 명령으로 확인 가능
ping : 상대 호스트와의 통신 연결 확인(네트워크 상태 점검, 진단 명령)
        네트워크 상태를 확인하려고 하는 대상 기기에 일정 크기의 패킷을 보내면 이를 수신, 분석하여 대상 기기의 동작 여부
        또는 네트워크 상태를 파악
        ICMP 프로토콜을 이용해서 동작, ICMP 프로토콜을 지원하지 않는 기기나 거부시킨 기기에는 사용할 수 없음.
ping [ IP Address or Domain]
ttl(time to live) : 데이터가 대상에 도착하기까지 거치는 네트워크 수, 데이터가 네트워크 상에서 무한루프에 빠지지 않도록 
                    한계치 지정  
                    값은 라우터 1개 거쳐갈때마다 1씩 감소, ttl 값이 0이되면 소멸.
ms(1/1000초)  : 보내는데 걸리는 시간
결과 분석시 보낸수와 받은 수가 동일할 경우에는 네트워크 정상 동작의미로 해석
기본적으로 56byte 패킷을 전송
ping option
   -c : ping을 보내는 횟수 제한
   -i : ping을 보내는 간격 제한
   -s : 패킷의 사이즈 제한
   -w : 몇 초후에 중지 시킬지 지정 

route : routing table 확인, 작성
 * routing table : 패킷이 가야할 길을 안내해주는 안내판(ex. 노선도)

작성 ex)
route add -net 192.168.50.0 netmask 255.255.255.0 dev ens32(network추가)
route add -net 192.168.50.0 netmask 255.255.255.0 gw 192.168.50.2 dev ens32(해당 network gw 추가)
route add default gw 192.168.50.2 dev ens32 (기본 gw 추가)
삭제 시에는 add 대신에 del 사용
*ens32 : 네트워크 관련
Destination   : 목적지  
Gateway      : 외부 네트워크와 연결하기 위한 gateway 주소   
Genmask     : 목적지 네트워크의 넷마스크    
Flags          : 해당 경로에 대한 정보를 표시
		u : 해당 경로가 살아 있음을 표시
		g : 게이트웨이로 향하는 경로
		h : 목적지가 host 주소
Metric	     : 목적지까지의 네트워크 거리 
Ref   	     : 경로를 참조한 횟수
Use	     : 경로를 탐색한 횟수
Iface	     : 패킷이 오가는데 사용한 네트워크 인터페이스 장치


traceroute : 상대호스트까지 도달하는 경로를 표시(최대 30단계)(윈도우에서는 tracert)
ARP protocal : 네트워크상에서 IP주소가 아닌 MAC 주소를 가지고 통신
	       네트워크 장치들의 MAC 주소를 학습, IP 주소와 mapping

arp -a : arp table
arp -s [IP Addres] [MAC address] : arp table 수정
arp -d [IP address] : arp table 삭제

nslookup : 도메인질의 명령어
netstat : 네트워크 연결 상태 확인, 네트워크 상태 및 port, protocol 정보 확인
[option]
    -a : 모든 소켓 정보 확인
    -n : 출력 결과를 10진수 수치 정보로 표시
    -r : routing 정보 확인
    -p : 실행되고 있는 프로그램명과 PID 표시
    -t : tcp
    -u : udp

port : 서비스를 구분지어주는 번호(들어오는 문)
        방화벽 정책 등 다양한 부분에서 사용하는 번호
        사용자가 서버에 접근해서 해당 서비스를 호출시에는 port 번호를 사용해서 호출
        관리자가 방화벽 환경에서 해당 port를 허가해주어야만 사용 가능
      범위 : 0 ~ 65535
       0 ~ 1023 : well known port
       1024 ~ 65535 : random port

systemctl == system control (아주중요하다 빨간색으로 쓸것)
-- 리눅스에서 실행되는 각종 서비스 및 시스템 수준을 제어
== 각종 서비스 실행 관리 및 run level 변경 등...
   시스템수준을 변경할때 (런레벨같은것들을 변경할때)


서비스 구성
1. 프로그램 설치 == rpm, yum
2. 프로그램 설정파일 편집
3. 해당 프로그램을 실행 == systemctl 명령으로 실행
			== 2번에서 작업한 설정 내용이 서버 프로그램에 적용
   == 6.x 까지는 service, chkconfig 명령으로 서비스관리, 자동시작관리
   == 7.x 부터는 systemctl 명령으로 서비스관리, 자동시작관리

   systemctl [지시어] [서비스명]
   
   [지시어]
	start : 서비스시작
	stop : 서비스 중지
	restart : 서비스 재시작
	reload : 서비스 설정 불러오기
	status : 서비스 상태 확인
	enable : 서비스 자동시작 등록
	disable : 서비스 자동시작 해제


	데몬 프로세스 == 툭정 서비스를 위해서 백그라운드 상태에서 동작하는 서버 프로세스
			== 서비스 == 프로그램
			== 각각의 서비스가 사용하는 포트를 관리하는 데몬들이 존재 (포트들을 관리)

====================================================================

firewalld : 방화벽
	  6.x까지는 iptables 서비스를 사용해서 방화벽 설정 관리
	  7.x 부터는 firewalld 서비스를 사용해서 방화벽 설정 관리
	  방화벽 설정은 기본적으로 들어오는 모든 접속을 막고 필요한 부분만 허용
  *방화벽 용어*
accept 	   : 허용
reject	   : 거부
drop	   : 폐기
incomming : 들어오는 패킷
outgoing   : 나가는 패킷
run-time    : 현재 상태의 방화벽 설정
permanent : 영구적 설정 적용(재부팅후에도 설정 유지)

방화벽 기본 영역
/usr/lib/firewalld/zones : 방화벽 기본 영역 확인
		        기본적으로 public 영역 사용
		        개방된 네트워크망은 주로 public
		        개인 네트워크 경우에는 상황에 따라서 선택 사용

firewall-cmd --get-default-zone : 현재 적용중인 기본영역 확인
firewall-cmd --set-default-zone=[사용할 영역] : 기본 영역으로 변경

/usr/lib/firewalld/services : 서비스 목록 확인, 포트, 프로토콜 정보 확인

방화벽 설정 명령
firewall-cmd [명령어]
               --permanent 			: 영구적 설정을 의미
	    --reload       			: 영구적 변경 사항을 런타임에 재적용(설정 변경 후에는 필수)
	    --add-service=[서비스명]  	: 해당 서비스 규칙 추가 =open
               --remove-service=서비스명 	: 해당서비스 규칙 제거  =close(일시적 변경)
	    --list-all 			: 현재 적용되는 방화벽 규칙 확인
	    --add-port=[포트/프로토콜] 	: 해당포트 규칙 추가
	    --remove-port=[포트/프로토콜]    : 해당포트 규칙 제거

tcp_wrapper :서버에 tcp 연결 요청이 전송되면 정당한 host 인지를 확인하는 리눅스
                 보안기능 중하나
trc_wrapper 패키지 필요
관련파일
 /etc/hosts.allow  : 서비스 접속을 허용할 host와 서비스를 정의
 /etc/hosts.deny  : 서비스 접속을 허용하지 않을 host와 서비스를 정의
                       설정 시에는 앞쪽에 서비스명 뒤쪽에 host 정의
		 ex) sshd:192.168.8.149
=> /etc/hosts.allw 와 /etc/hosts.deny 파일중에서는 hosts.allow를 우선 적용
      (거부보다 허가를 우선)


remote service : telnet
		평문전송=비암호화 원격 접속 서비스=보안성 취약
                         (보낸 그대로 날라가는것)
		CLI환경
		한글 지원 안함
		23번 포트를 사용
		편리함을 이유로 사용하는 서비스 (윈도우 기본제공)
		안전한 네트워크망이라면 사용속도면에서는 빠름
제어판 - 프로그램 - windows기능 사용/사용안함 - 텔넷 클라이언트 체크
※ telnet 접속 하는 방법
     telnet [server ip] 
       1. telnet 패키지 설치
==========================================================
CD mount 작업을 통해서 telnet으로 시작하는 패키지들을 수동으로 설치

vm들어가서 cd누르고 setting > use iso > centos.os >iso 연결
mkdir /mp
mount /dev/sr0 /mp
cd /mp
cd Packages/
ls
find ./ -name "telnet*" or ls -l telnet*
rpm -ivh telnet-0.17-64.el7.x86_64.rpm
rpm -ivh telnet-server-0.17-64.el7.x86_64.rpm
rpm -qa |grep telnet | nl
==========================================================
          2. 방화벽 설정 : firewall-cmd --permanent --add-port=23/tcp(23번 포트 개방)
	                  firewall-cmd --reload (확인)
          3. 서비스 실행 : systemctl restart/start telnet.socket(데몬 실행)
               =>6.x 대까지는 xinetd(슈퍼데몬)을 사용해서 telnet 서비스 실행
                   7.x부터는 telnet.socket 명칭으로 별도 실행
           4. CMD에서 telnet 접속
              *관리자 ID는 접속 불가,사용자 ID로 관리자 권한을 받아야함
           5. 관리자 권한 받아오기
                su - : 관리자 권한 획득
                su : 접속한 계정명만 변경, 관리자 권한 획득 불가

remote service : openssh(secure shell)
		암호화통신
		안전한 접속, 암호화 접속
		일반적으로 가장 많이 사용하는 원격 접속 서비스
		22번 포트 사용
  1. openssh 패키지 : 리눅스 기본 제공
     서비스 실행 : systemctl restart sshd(데몬 실행),
     /etc/ssh/sshd_config : ssh 서비스 주 설정 파일
       * 17 #Port 22 : ssh 서비스에서 사용할 port 정의(# : 해당라인 피활성화/설명)
         ※ 설정 변경시 데몬 다시 실행/ 데몬 다시 실행 하지 않으면 기존 설정으로 인식
==========================================================
※ 실습(다른 포트로 putty 접속)
systemctl restart sshd 			: 데몬 실행
mkdir /backup				: 디렉터리 생성
cp /etc/ssh/sshd_config /backup/		: 원본 카피
ls -l /backup/
vi /etc/ssh/sshd_config			:원본 파일 오픈
systemctl restart sshd			:데몬 생성
firewall-cmd --permanent --add-port=10000/tcp   : 포트 생성
firewall-cmd --reload			: 확인
==========================================================
       * 19 Listen Address      : ssh 서비스 접속을 허용할 client 지정
	           	            : 0.0.0.0 => 모든 client 허용
	   	            : 필요시 특정 ip address만 허용
       * 38 PermitRootLogin    : 관리자 접속 허용 여부(yes : 허용)(no : 허용안함)
  		              ssh 서비스 보안설정
       * 40 MaxAuthTries       : ssh 최대 인증 시도 횟수
	      	              이 횟수만큼 연결에 실패시 연결 해제
       * 37 LoginGraceTime	: ssh 연결 로그인 대기시간(기본값 2분)

  2. 관리자 권한 받아오기
      su - : 관리자 권한 획득
      su : 접속한 계정명만 변경, 관리자 권한 획득 불가
※ ssh 서비스 접속하기(telnet 접속과 유사)
   1. ssh [server ip]			 : 접속한 사용자명으로 접근 요청
   2. ssh -l(login) [계정명] [server ip]       : 지정한 사용자 접근 요청
   3. ssh [계정명]@[server ip]		  : 지정한 사용자 접근 요청
=> 2번과 3번 결과는 동일하나 3번형식을 많이 사용

scp(secure copy) : 암호화 복사
                       원격지 데이터를 안전하게 암호화 해서 복사 (ssh+cp)
                        server 와 client 양쪽에 openssh 서비스가 설치되어 있어야만 사용
scp [option] [원본파일위치] [server ip]
scp [option] [원본파일위치] [계정명]@[server ip]

※ telnet과 ssh는 공통점은 텍스트 환경
	          차이점은 암호화(ssh)와 비암호화(ssh)

==========================================================
예제)
server ip :192.168.10.10	              	client ip : 192.168.10.11
  scp 192.168.10.10/tmp/A  /TEST	      scp /tmp/A 192.168.10.11:/TEST
클라이언트가 서버에서 복사해오는 형식	    서버가 클라이언트에게 복사를 해주는 형식
= 다운로드			      =다운로드
    scp /test/A 192.168.10.10: /tmp	     scp  
클라이언트가 서버에 복사해주는 형식
=업로드
 
 * 사용형식에 따라서 up, down 형식 적용
==========================================================
sftp(secure file transfer protocol) : 암호화 전송
sftp [server ip]			 : 접속한 사용자명으로 접근 요청
sftp [계정명]@[server ip] 		  : 지정한 사용자 접근 요청
upload =  put(명령어)
download = get(명령어)

==========================================================
예제) client에 /tmp/testfile을 서버 /test/ssh scp sftp에 각각 이동(클라이언트쪽에서 모든 작업이 이루어진다)

※ scp
1.서버쪽 putty 접속해서 일반사용자로 접속. 접속한다음에 su - 활용해서 관리자 권한 받아온다.
2. 클라이언트 putty 접속해서 /tmp/testfile을 서버쪽으로 이동한다.
3. scp /tmp/testfile itbank@192.168.8.149:/test/scp 치면 패스워드를 쳐라고 나온다. 하지만 권한이 없어서 안된다.  why? scp에 other권한에 쓰기 권한이 없다. (서버쪽 root접속을 막아서 서버ip로는 접속이 안된다).
4.  chmod 757 /test/scp (other 권한에 쓰기 권한 부여)
5. scp /tmp/testfile itbank@192.168.8.149:/test/scp로 파일 전송 시작.
  * 서버 앞에 적는 계정은 서버에 등록되어 있는 계정이어야만 한다.

※ sftp
1. cd /tmp
2. sftp itbank@192.168.8.149
3.cd /test/sftp
4. put testfile  (권한이 없어서 안됨)
5.chmod 757 /test/sftp (other 쓰기 권한 부여)
6. put testfile

※ ssh
1. ssh 192.168.8.150(client ip)
2. ls -l /tmp (testfile 있는지 확인)
3. chmod 757 /test/ssh (other 쓰기 권한 부여)
4. scp /tmp/testfile itbank@192.168.8.149:/test/scp
====================================================================

VNC : virtual network computing 
		그래픽 환경 원격 접속 서비스(ssh, telnet은 텍스트 환경)
		설치가 간편, 특별한 설정 없이도 사용 가능
		시스템 앞에 있는 것과 같은 해상도 제공 
		대부분 운영체제에서 사용 가능
  패키지 설치 : yum -y install tigervnc*
                    패키지 설치 완료 되면 rpm -qa | grep tigervnc|nl로 패키지 설치 확인할 것.
     1  tigervnc-server-1.8.0-2.el7_4.x86_64
     2  tigervnc-server-applet-1.8.0-2.el7_4.noarch
     3  tigervnc-license-1.8.0-2.el7_4.noarch
     4  tigervnc-server-module-1.8.0-2.el7_4.x86_64
     5  tigervnc-server-minimal-1.8.0-2.el7_4.x86_64
     6  tigervnc-icons-1.8.0-2.el7_4.noarch
     7  tigervnc-1.8.0-2.el7_4.x86_64
  vnc 서비스 구동하기 :    vncserver 
      1. putty 창에 vncserver라 치면 password를 치라고 한다.
         이것은 vnc 접속 할때 사용할 패스워드 설정하라는 것임.
         -> 접속 패스워드 설정
      2. 접속할 때 패스워드도 필요하지만 디스플레이 번호도 필요하다.
         디스플레이 번호가 다르면 vnc 접속이 불가능 하다.
         localhost.localdomain: 1(디스플레이 번호)
         -> 디스플레이 번호 확인

 /root/.vnc : 이름앞에 '.'이 있는 것은 숨김옵션이 붙어 있음. vnc 관련 정보파일들의 경로
	   서비스를 실행시킨 사용자 home 디렉터리에 자동으로 구성된다.
      config		   : 기본 해상도 설정 파일 
      localhost.localdomain:1.log   :  vnc 접속 기록
         요일 월 일 시:분:초 년 ,접속 ip 등 접속 기록 확인 할수 있다.
      localhost.localdomain:1.pid   : 서비스 동작시 부여받는 PID(Process ID)
      passwd		   : 비밀번호 관련 파일, 분실 시 vncpasswd로 비민번호 변강 가능
 * 패스워드 까먹었을때 vi passwd로 내용 삭제한후 저장뒤 나가서 vncpasswd로 패스워드 재설정 가능
      xstartup		  : vnc 서비스 주 실행 파일, 6.x부터는 별도 설정 필요 없음.

 vnc 서비스 접속하기  : vncviewer [server ip]:[디스플레이번호]
                          ex) vncviewer 192.168.8.149:1
     *동일한 원격 접속이며 리눅스가 그래픽으로 설치가 되어 있어야 가능. putty로는 불가.

netstat -atnp | grep Xvnc 포트확인
 하나의 port를 사용하는게 아니라 5900번대 포트를 사용한다. 
 vnc 사용포트 : 5900+[디스플레이번호]

 접속 종료할때 1. vncserver -kill :[디스플레이번호] (세션 접속)
  	       2.	 kill -9 [PID]	or	killall -9[프로그램명]
*세션을 종료하는게 아니기때문에 디스플레이번호가 다름.

재접속시 vncserver로 디스플레이번호 다시 받은다음 vncviewer 192.168.8.149:디스플레이번호 로 접속

====================================================================
vnc viewer 프로그램을 사용해서 server ip:디스플레이번호로 안들어가지는 것을 들어가게 만들기	 	

터미널에서 vnc프로그램 들어가는지 확인(디스플레이 번호 확인)
vnc프로그램 포트 확인해서 방화벽에서 포트 개방
  firewall-cmd --permanent -add-port=590(디스플레이번호)/tcp
  firewall-cmd --reload
  firewall-cmd --list-port(포트개방 확인)
====================================================================

		telnet		ssh		vnc
속도		빠름		빠름		느림
사용환경		CLI		CLI		GUI
보안		취약		우수		취약
프로그램	윈도우 : 기본제공		별도		별도
	리눅스 : 별도설치		기본		별도

telnet : 비암호화 원격 접속 서비스, 23포트 사용
ssh    : 암호화 원격 접속 서비스, 22포트 = scp, sftp 기능 사용
vnc    : 그래픽 원격 접속 서비스, 5900대 포트

====================================================================

  vsftpd : very secure file transfer protocol(매우 안전한 ftp)
	redhat리눅스 기본 FTP 패키지
	설정이 간편, 데이터 자원 소모가 적음
	보안성이 우수하다.

※ 파일 올리는 방법
cmd 들어가서 파일 위치로 이동 (ex. d:)
ftp ip로 해당 ip 접속
이동한 뒤 사용자 id와 pw로 접속.
put [파일명]으로 리눅스 서버에 다운로드


      FTP 서비스 사용자
	1. 시스템에 등록된 사용자 : /etc/passwd 에 등록된 사용자
			        -> 관리자가 허가해준 권한에 따라서 업로드, 다운로드 작업 가능

	2. 시스템에 등록되어 있지 않은 사용자 : /etc/passwd에 등록이 안된 사용자
				            = anonymous = 익명 사용자
					-> 기본적으로 보안상 업로드 금지
  패키지 설치 : yum -y install vsftpd*
	      rpm -qa | grep vsftpd

방화벽 설정 : firewall-cmd --permanent --add-service=ftp
	    firewall-cmd --reload
	    firewall-cmd --list-service
서비스 실행  : systemctl restart vsftpd (데몬 재실행)

/etc/vsftpd/vsftpd.conf  : vsftpd 주 설정 파일

   12 anonymous_enable=YES	: 익명 사용자 서비스 허용 여부
		->FTP서버를 공개형태로 운용시에는 허용
		->FTP 서버를 비공개형태로 운용시에는 허용 안함
   16 local_enable=YES   	: 시스템에 등록된 사용자 서비스 허용 여부
		-> 기본적으로 YES 설정

     => 서비스 허용 설정

   19 write_enable=YES	  : 시스템에 등록된 사용자 업로드 허용 여부

   29 #anon_upload_enable=YES : 익명 사용자 업로드 허용 여부

* /var/ftp/pub : 익명사용자가 처음접속했을 때의 위치

   37 dirmessage_enable=YES 	 : 디렉토리 메세지 사용 여부(개별 메세지)
  		->FTP 접속 시 해당계정의 홈디렉토리에 자동으로 접근이 되고 해당 계정의 홈디렉토리에 
		    디렉토리 메세지 설정 가능
		->설정시 사용자 홈디렉토리 경로에 .message  파일 생성으로 설정

   86 #ftpd_banner=Welcome to blah FTP service.
		-> FTP서비스 배너(banner) 설정/전체 메세지

   40 xferlog_enable=YES : 파일전송시 발생하는 로그 기록 여부
		        관리자는 반드시 YES

    53 #xferlog_file=/var/log/xferlog : xferlog 파일 경로

		xferlog 필드
ex) Sat Apr 14 17:28:40 2018 1 ::ffff:192.168.8.1 0 /export/home/itbank/111.txt a _ i r itbank ftp 0  *  c
                       1               2           3          4                5                       6 789   10     11 121314

1   :  FTP 서비스에 접속한 시간
2   :  데이터 전송에 걸린 시간(단위는 초)
3   :  접속한 host에 대한 IP
4   :  데이터 크기(byte)
5   :  전송된 파일의 위치정보
6   :  전송된 파일의 형식(a : 문서파일, b : 실행파일)
7   :  취해진 행동( _ : 아무일 없다, c : 압축, u : 압축하지 않음, t : tar)
8   :  전송형태 (i : 업로드, o : 다운로드)
9   :  접속한 사용자의 종류 ( r : 시스템 등록된 사용자, a : 시스템에 등록되어 있지 않은 사용자 = anonymous)
10 :  접속한 사용자명 (9번이 r일 경우에는 접속한 사용자명 표시, a일 경우에는 ?로 표시)
11 :  접속된 서비스명
12 :  인증사용 여부(0: 인증사용 안함, 1 : 인증사용 함)
13 :  인증성공 여부(* : 인증 사용 안했음, 0 : 인증 실패, 1 : 인증 성공)
14 :  전송여부 (c : 전송 성공, i : 전송 실패)

사용자 디렉토리 이동 제한

   100  chroot_local_user=YES : 사용자 디렉토리 이동 제한 여부
			100번 라인 적용시 allow_writeable_chroot=YES 라인까지 추가 작성 필요
   102  chroot_list_enable=YES : 100번 항목에서 제외시킬 사용자 목록 사용 여부
   104 chroot_list_file=/etc/vsftpd/chroot_list : 100번 항목에서 제외시킬 사용자 목록 파일 위치
				      chroot_list 파일 생성 후 제외시킬 사용자 등록

   FTP 서비스 포트 : 20, 21 포트 사용
   포트 동작 형식에 따라서 active mode, passive mode로 구분할 수 있다.
        active mode : 데이터 전송할때 server의 20번 port와 client가 데이터 송수신
                            서버가 클라이언트에게 맞춰주는 형식
		20번port : 전송 담당  21번port : 연결 담당

       passive mode : 데이터 전송할때 server가 client에게 1023번 이후 랜덤port로 데이터 송수신. 
                             데이터 몰림현상 x, 속도 변에서 acvitve보다 빠르다.
		21번 port : 연결 담당, 랜덤포트 : 데이터 전송
        passive mode 사용시 설정 파일(vsftpd.conf)에 맨 마지막 라인 추가
	ex)  pasv_enable=YES     : passive mode 사용 여부
	      pasv_min_port=3500 : passive mode 사용시 사용할 port 최소 값
	      pasv_max_port=3550 : passive mode 사용 시 사용할 port 최대 값
	  
 	       랜덤포트 사용시 방화벽 설정 필요
	ex) firewall-cmd --permanent --add-port=3500-3550/tcp
	     firewall-cmd --reload

20번 포트 사용 유무에 따라 active 와 passive mode로 나뉜다.
  

	               /var/ftp	    	               	/var/ftp/pub
	        itbank       anonymous                             itbank       anonymous
755   접속	           o		o			o	    o
        업로드         x		x			x	    x

	        itbank       anonymous                              itbank       anonymous
757   접속	           o		x			o	    x
        업로드        o 		x			o	    x

익명사용자는 기본적으로 보안상 업로드 금지
익명사용자가 필요 이상의 권한을 적용받을시 서비스 자체에서 권한을 막는다.
익명사용자 업로드 허용시에는 /var/ftp/pub 디렉토리 허가권 753,755를설정하면 가능
설정파일에 허용을 설정해도 관리자가 별도로 권한을 맞춰주어야만 작업가능하다.
====================================================================
4.21
autofs :    재부팅후에도 nfs 연결 유지
	사용하지 않을 경우에는 언마운트 되어 있다가 사용할 경우 자동으로 마운트
	autofs 관련 작업은 client에서 진행

작업 순서
  1. 패킷 설치 : yum -y install autofs*
       autofs 관련 파일
          1. /etc/autofs.conf
	=> 8 #master_map_name = auto.master : autofs 참조 파일 정의
	=> 15 timeout = 300 : 이 시간동안 파일시스템에 작업이 없을 경우 언마운트
			시간 단위는 초
	=> 45 browse_mode = no : client의 마운트 포인트 목록 보여주기

          2. /etc/auto.master
	autofs 서비스는 client의 마운트 포인트가 자동으로 생성
	기본적으로 7번 라인에 정의된 /etc/auto,misc파일의 내용으로 /misc경로에 자동으로 마운트 포인트 구성
	
          3. /etc/auto.misc (3개의 필드로 구성)
	첫번째 : client의 마운트 포인트 (경로 없이 이름만)
	두번째 : 마운트 적용 옵션 (옵션 적용시 '-' 반드시 넣을 것)
  	    ro : 읽기 (주로 soft사용)
	    rw : 읽기, 쓰기  (주로 hard사용)
	    soft : 서버와 연결이 되지 않을 경우 오류 발생 후 마운트 종료
	    hard : 서버와 연결이 되지 않을 경우 타임 아웃시까지 계속 시도
	    intr : 정지 프로세스를 죽이기 위한 인터럽트 허용
	            예기치 못한 상황에서 서비스 유지
	세번째 : 마운트 될 파일 시스템 위치 (server ip :공유 디렉터리)

  2. 서비스 실행 : systemctl restart autofs
	          autofs 서비스를 자동시작 서비스로 등록하지 않으면 부팅시 별도 서비스 실행 필요      
  3. 자동실행     : systemctl enable autofs

========================================================================
nfs 종합

리눅스 시스템 2대 부팅(server, client)
한쪽을 nfs server 다른 한쪽을 nfs client로 세팅
normal nfs, autofs 연결 설정을 해볼 것.
autofs 서비스는 10초 동안 작업이 없을 경우 언마운트 되도록 설정
파티션, 마운트 포인트 자유 (마음대로 사용)
ex) 500M = normal nfs 	//	500=autofs

nfs server : nfs 패키지, partition 구성
nfs client : nfs 패키지, autofs 패키지



server
fdisk /dev/sdb
n
1
+500M
n
2

mkfs.xfs /dev/sdb1(포맷)
mkfs.xfs /dev/sdb2(포맷)

mkdir /sdb1_s /sdb2_s

vi /etc/sftab들어가서 마지막 줄에 
/dev/sdb1		/sdb1_s	xfs	defaults	0 0 
/dev/sdb2		/sdb2_s	xfs	defaults	0 0

df -h 로 확인

yum -y install nfs* (패키지 설치)
rpm -qa | grep nfs

vi /etc/exports로 들어가서 아래 문장 저장
/sdb1_s	192.168.8.150(rw,no_root_squash,sync)
               (client ip)
/sdb2_s	192.168.8.150(rw,no_root_squash,sync)
	(client ip)
systemctl restart rpcbind
systemctl restart nfs(데몬 실행)
systemctl enable nfs(자동실행)
rpcinfo -p (라인 길게 나와야함)
exportfs -v (서비스상태 확인)

firewall-cmd --permanent -add-port=111/tcp
firewall-cmd --reload
firewall-cmd --list-port

firewall-cmd --permanent --add-service=nfs
firewall-cmd --reload
firewall-cmd --list-service


client
     *nfs*
yum -y install nfs*(패키지 설치)
rpcinfo -p 192.168.8.149(클라이언트는 서버 ip를 입력해야됨)
mkdir /sdb_1c
mount -t nfs 192.168.8.149:/sdb_1s /sdb1_c(nfs타입을 서버ip에 /sdb_1s를 클라이언트의 sdb_1c와 연결)
df -h
touch /sdb1_c/normal

   *autofs*
yum -y install autofs* (패키지 설치)
rpm -qa | grep autofs
vi /etc/autofs.conf
vi /etc/auto.master가서 7번째줄 확인
vi /etc/auto.misc 가서 마지막 줄에 입력
sdb_2c	-rw,hard,intr	192.168.8.150:/sdb2_s
			(연결시킬 ip와 디렉터리)

systemctl restart autofs (데몬 실행)
systemctl enable autofs (자동실행)

재부팅했을 대 nfs는 연결이 끊기는게 정상, autofs는 연결이 지속되는게 정상
==========================================================================


DNS(Domain Name Service) :  이름풀이 서비스
	=> 사람이 기억하기 쉬운 문자형태의 도메인명을 기계가 인식하는 숫자형태의 ip address로 변환
     도메인 탐색 순서
	www	.	naver	.	com	   .
		<-		<-		 <-	
           host name		  Domain      NAME            (root domain)
				          (인터넷 접속 생략 가능,DNS설정 생략 불가)
도메인 탐색시에는 .(root domain)부터 뒤에서부터 순차적으로 탐색
인터넷 접속시 생략가능, DNS설정시에는 생략 불가

ex)    www .       naver.com
    [host name] [domain name]
		=> 기계가 인식하는 숫자형태의 도메인명을 사람이 기억하기 쉬운 문자형태의 이름으로 사용
         192 . 168 . 1.  128.
         [network id]     [host id]

=> networkid와 domain name, host id와 host name을 mapping
정방향 영역 : 도메인을 ip로 변환
역방향 영역 : ip를 도메인으로 변환

1. /etc/hosts   = NS(Name Service) 정의
	        인터넷 주소와 호스트와의 관계를 정의
	        도메인 탐색을 시작하는 1차 관문
    127.0.0.1(자신을 의미하는 ip)
     #[IP Address]   [FQDN(fully qualified domain name)]
       192.168.8.149   www.mydomain.co.kr
2. /etc/resolv.conf = network 설정
		/etc/hosts에 정의되지 않은 그 외의 도메인을 탐색한 nameserver 정의
    nameserver 옆 ip : NS(name server) IP
   *슈퍼DNS(168.126.63.1) : 한국통신 DNS서버
  재부팅하면 초기값으로 돌아간다.
=> nameserver 패키지와 상관없는 탐색 관련 파일
맨 위에 자기 자신 ip 입력

패키지 설치 : yum -y install bind*

3. /etc/named.conf : NS 환경 설정
     13         listen-on port 53 { 127.0.0.1; }; : 	: 포트 개방 여부
     19         allow-query     { localhost; };		: 접근 허용여부
     31         recursion yes;			: 반복적인 탐색 허용 여부 

/var/named : 네임서버의 홈디렉터리, 네임서버 관련 정보파일들이 있는 곳

4. /etc/named.rfc1912.zones : NS 영역 정의
 중간 000000000000000000000000기분으로 위는 정방향, 아래는 역방향
정방향 문구 수정시 주의 사항!!
zone 부터  }; 까지 한덩어리. 빼먹지 말것!
*정방향 
zone "linux.edu.kr" IN {
       (Domain Name)
     44         type master;
	  (주 네임서버,1차네임서버)
                       *slave(보조 네임서버, 2차 네임서버)
     45         file "linux.edu.kr.zone";
	        (정방향 zone파일 정의,파일 생성시 파일명 동일해야됨!!)
     46         allow-update { any; } ;
                      (동적 업데이트 허용)
     47         allow-transfer { any; };
                     (영역 전송 허용)
     48 };

*역방향
 zone "네트워크id 역순.in-addr.arpa" IN {
      32         type master;
      33         file "named.loopback";
      34         allow-update { none; };
 	    allow-transfer { none; };
      35 };

5. 정방향 영역 파일 만들기(/var/named에 만들 것)
$TTL    86400
@       IN      SOA     linux.edu.kr.       root(
                                        77      ; serial
                                        10800   ; refresh
                                        900     ; retry
                                        604800  ; expire
                                        86400   ; minimum
                                        )

        IN      NS      www.linux.edu.kr.
        IN      A       192.168.8.149

www     IN      A       192.168.8.149

또는

$TTL 1D
@       IN SOA          itbank.com.     root (
 	                                        0       ; serial
	                                        1D      ; refresh
              		                          1H      ; retry
              		                          1W      ; expire
 	                                       3H )    ; minimum
        IN      NS      ns.itbank.com
        IN      A       192.168.8.149

ns        IN      A       192.168.8.149
www     IN      A       192.168.8.149


6. 역방향 영역 파일 만들기(
$TTL    86400
@       IN      SOA     www.linux.edu.kr.       root(
                                        77      ; serial
                                        10800   ; refresh
                                        900     ; retry
                                        604800  ; expire
                                        86400   ; minimum
                                        )
        IN      NS      www.linux.edu.kr.
        IN      A       192.168.8.149

149     IN      PTR     www.linux.edu.kr.

또는

$TTL 1D
@       IN SOA          itbank.com.     root (
 	                                        0       ; serial
	                                        1D      ; refresh
              		                          1H      ; retry
              		                          1W      ; expire
 	                                       3H )    ; minimum
        IN      NS      ns.itbank.com.
        IN      A       192.168.8.149

ns        IN      A       192.168.8.149
www     IN      A       192.168.8.149


7. 권한 수정
 chmod 660 linux.edu.kr.zone 192.168.8.zone (허가권 660으로)
 chown .named linux.edu.kr.zone 192.168.8.zone(소유권수정, 소유그룹은 무조건 named로)

8. 서비스실행
 systemctl restart named
  * 메시지 없이 넘어가는게 정상

 ※2차 네임서비스 만들기

 1. named.rfc1912.zones에서 수정(1차 네임서버)
 zone "itbank.com" IN {
     44         type master;
     45         file "itbank.com.zone";
     46         allow-update { any; };
     47         allow-transfer { 192.168.8.150(보조네임서버로 활용할 ip); };
     48 };
     49
     50 zone "8.168.192.in-addr.arpa" IN {
     51         type master;
     52         file "192.168.8.149.rev";
     53         allow-update { any; };
     54         allow-transfer { any; };
     55 };
2. 방화벽설정
   firewall-cmd --permanent --add-service=dns
   firewall-cmd --reload

3. bind패키지 설정(2차네임서버로 접속)

vi /etc/rfc1912.zones
 zone "itbank.com" IN {
	type slave;
	masters { 192.162.8.149(1차 네임서버ip); };
	masterfile-format text;
	file "slaves/itbank.com.slave";
	allow-update { any; };

4. 데몬실행

※ web server : 웹서비스를 제공하는 역할을 하는 서버
	      웹(www)상에 있는 서버 이므로 인터넷만 가능하다면 어는 곳에서든 방문 가능
	      html, php, jsp 웹문서를 실행시키는 실행 환경 제공
	
	웹서버 동작 방식

정적 웹서버 동작 방식 : 웹 문서의 결과 전송(ex. 각 사이트 메인 페이지)
	      	 
동적 웹서버 동작 방식: 웹 프로그램의 결과 전송(ex. 로그인 이후 페이지)
------------------------------------------------------------------------------------------------------------------------------
  apache : 무료 공개형 웹 서버 프로그램
	free platform = 호관성 우수
	모듈 사용가능 => 기능 추가가 용이
	보조적 프로그램 다양
	80번 포트를 사용한다.

  *윈도우 : web server 구성시 IIS(윈도우에서만 가능) 사용. 
  	IIS를 사용하기 위해선 비용이 발생

  패키지 설치 : yum -y install httpd*
  서비스 실행 : systemctl restart httpd
 
 /etc/httpd/conf/httpd.conf : 아파치 주 설정파일

 31 ServerRoot "/etc/httpd" : apache 홈 디렉터리
		           apache 설정파일들이 저장될 디렉토리 경로

 ServerTokens [지시어] : 오류문등에 표시되는 서버 정보 설정 
		     사용하기 위해서는 serversignature on 반드시 적어야한다.
                    [full]	   : 아파치 서버 버전, 운영체제, 모듈정보들을 모두 출력
                    [OS]	   : 아파치서버 버전, 운영체제 정보만을 출력
                    [Minor]  : 아파치 서버의 하위 버전까지 출력
                    [Major]  : 아파치서버의 모든 정보만을 출력
                    [Prod]   :  아파치서버의 정보만을 출력

43  Listen 80 : 기본적으로 웹 서버는 80 포트를 사용
	      80번 포트로 요청하는 모든 주소 허용
	      필요시 특정 IP client 허용, 사용포트 변경 가능

88 ServerAdmin : 웹 문서 로딩 에러시 통보할 관리자 메일 주소
97 #ServerName : 클라이언트에게 표시 할 웹서버명 정의
	           도메인이 있다면 도메인명, 도메인이 없다면 웹서버 IP등록해도 무관

121 DocumentRoot : 기본 웹문서 디렉터리 경로
		apache 서버가 인식할 데이터 경로
		다른 디렉토리 경로 사용시에는 별도 권한 수준 정의 필요
ex) 
	<Directory "/var/www(사용할 디렉토리 경로)">
                       AllowOverride None	:  .htaccess 사용 여부
                        Require all granted	: 디렉토리 접근 권한 수준 
                      </Directory>		
====================================================================
Q)	DocumentRoot : /export/home/main/public_html 로 변경

	사용자 생성 조건

	user : main
	자동생성디렉토리 : public_html

	firefox 주소창에 www.hatems.com을 조회했을때
	main이라는 내용의 페이지가 출력되도록 세팅

An)	1.네임서버 변경한다. 	
	2. mkdir /etc/skel/public_html  (자동생성 디렉토리 생성)
	3.useradd -d /export/home/main   main   (유저 생성)
	passwd main			(유저 비밀번호 만들고)
	vi /etc/httpd/conf/httpd.conf		(index.html파일 경로 만들기126번부터 130번과 동일하게)
	*이때 파일 경로는 추가로 넣을 파일 경로로 할것!"
	system restart vsftp 	(ftp 데몬 실행)
	* ftp로 파일 올리기
	cmd 창에서 d:
	ftp 192.168.8.149
	main(id)
	itbank(passwd)
	cd pulic_html
	put index.html
	systemctl restart httpd  ( 데몬 실행)
	chmod 701 main (권한 부여)
====================================================================
firefox 주소창에 www.hatems.com/test를 조회했을때
directory test 라는 내용의 페이지가 출력되도록 세팅
	방법
	-ftp에서 public_html 아래 mkdir test로 test 디렉토리 생성.
	-test로 들어가서 put index.html로 파일 다운로드

====================================================================
Q)firefox 주소창에 www.hatems.com/~user1띄우기

A)	cd  /etc/httpd/conf.d
	vi userdir.conf
	17번째 비활성화
	24번째 활성화
	chmod 701 user1(권한 부여)

사용자 디렉토리를 사용한 페이지 출력
/etc/httpd/conf.d/userdir.conf 파일 편집

 17    # UserDir disabled	= 사용자 디렉토리 사용 여부
			= 사용시 비활성화 설정
 24     UserDir public_html	= 사용자 디렉토리명 정의

 	디렉토리 사용시 별도 권한 수준 정의 필요

ex)

 <Directory "[사용할 디렉토리 경로]">
     32     AllowOverride FileInfo AuthConfig Limit Indexes
     33     Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
     34     Require method GET POST OPTIONS
     35 </Directory>
====================================================================
별칭 지정 페이지 출력

vi /etc/httpd/conf/httpd.conf 파일에 라인 추가

alias [별칭] ["웹문서경로"]
ex)	alias /apache "/export/home/user1/public_html/"

====================================================================
	 virtual host  =  가상 호스트

한대의 웹서버에서 여러개의 호스트 운영시 설정
Document root는 메인만 연결.

정방향 영역 가서 cafe,mail,blog 라인 추가
cd /etc/httpd/conf.d 이동
vi vhost.conf 파일 생성
 ex) <VirualHost *: 80>
            ServerName www.hatems.com
            DocumentRoot /var/www/www1
</VirtualHost>
    =이런식으로 각각의 host와 DocumentRoot를 정의

/etc/httpd/conf/httpd.conf 파일에서 웹 문서명 정의시에는
Directoryindex == 웹문서명 정의

*웹문서명을 바꾸고 싶을 경우
ex)  174     DirectoryIndex index.html을 바꾸면 된다.
 cd /var/www
mkdir www1 cafe mail blog  
 vi www1/www.html   (웹 문서 생성)

rm -rf /etc/httpd/conf.d/vhost.conf
rm -rf www1 cafe mail blog
로 가상 호스트 작업 종료

====================================================================
	database : 데이터(자료)를 효율적으로 저장하기 위한 저장 공간
		---표의 형태로 구성

	R-DBMS : relation-database management system
		---관계형 데이터 베이스 시스템
		---서로 다른 테이블간의 관계를 유지하면서 데이터 처리, 관리
	mariadb : 무료, 공개형 데이터베이스 
		---mySQL 서버와 소스코드가 동일
		---SQL언어문을 사용해서 데이터 처리, 관리
			--- 데이터 구조 질의 언어문
	    패키지 설치 : yum -y install mariadb*
	    서비스 실행 : systemctl restart mariadb
 	    마리아 db 접속
	     ex)	mysql -u root -p mysql
		   1      2   3    4    5
	      1 : mariadb 서버를 실행시키는 실행 명령
	      2 : mariadb 서버에 접근할 user
	      3 : mairadb 서버에 접근할 사용자명(mariadb의 관리자, linux의 root가 아님)
	      4 : db접근시 사용할 패스워드
	      5 :  접근할 database 명
ctl+l  : 작업 내역 삭제
	      database 구조
			      database > table > field > value
	주요 테이블
	user : 사용자 생성 table (host,user,password 기억)
	db   : 데이터베이스와 사용자 연동 table(host,db,user 기억)

	※ 명령어(끝날때는 반드시 ; 붙여줄것!!)
	     ※DB작업시 오타가 없는지 제대로 확인할 것! 데몬 돌린 뒤라면 망한다...
	    CMD		database		table
	 ===============================
	    show : 		O		O
	ex) show databases; : 데이터베이스 목록 확인
	     show tables; : 테이블 목록 확인
	================================
	    use : 		O		X
	ex) use test; : 데이터베이스 이동
	=================================
	    describe	x		o	
	    explain 	x		o
	    desc 		x		o
	ex) desc user; : 테이블에 대한 요약, 축약 정보 확인
	=================================
	    create		o		o
	ex) create database dbitbank; : 데이터베이스 생성
	     create table tbitbank (num int(2),name char(10)); : 테이블 생성
	==================================
	    drop		o		o
	ex) drop database dbitbank; : 데이터베이스 삭제
	     drop table tbitbank; : 테이블 삭제
	===================================
	    select		x		o
	ex) select * from user; : 테이블에 있는 전체 필드와 레코드값 확인
	     select host,user,password from user; : 지정한 필드와 레코드값 확인
	====================================
	    update		x		o
	ex) update user[테이블이름] set password=password('itbank') where user='root'; : 레코드값 수정
	     패스워드 설정시에는 반드시 password=뒤에 password를 한번 더 붙여준다.
	====================================
	    delete		x		o
	ex) delete from user where user=''; : 레코드값 삭제
	=====================================
	   insert		x		o
	ex) insert into(생성) user(테이블) (host,user,password) values('localhost',useritbank',password('itbank'));
	     insert into db values ('localhost','dbitbank','useritbank','y'19번);  -> type에 순서대로 들어간다.
 	     => 레코드값 삽입
	=====================================		
	   alter		x		o
	ex)alter table(크기) tbitbank(위치) add addr char(20)(필드 타입);  : 그냥 add만 넣으면 맨 끝에, 
	    alter table(크기) tbitbank(위치) add hp char(20)(필드 타입) after name(필드 이름);  : 해당 필드 뒤에 추가			
	    alter table(크기) tbitbank(위치) add age int(2)(필드 타입) fist;    : 맨 앞에 추가
	    alter table(크기) tbitbank(위치) modify addr char(20)(필드 타입)  : 필드 타입만 변경
	    alter table(크기) tbitbank(위치) change addr char(20)(필드 타입)  : 필드의 이름과 타입 변경
	    alter table(크기) tbitbank(위치) drop aaa;  : 필드 삭제
	=========================================
	phpmyadmin : MySQL(mariadb) 서버의 거의 모든 기능을 지원하는 웹기반 관리 매니저 프로그램
		      데이터베이스, 테이블, 필드등을 손쉽게 관리
		     http://www.phpmyadmin.net/downloads 접속
		     phpMyAdmin-4.0.10.20-all-languages.tar.zip 다운로드
		     systemctl restart named,httpd,mariadb,vsftpd 데몬 실행
		     ftp로 public_html에 압축파일 다운
		     /export/home/main/public_html로 이동
		     unzip phpMyAdmin-4.0.10.20-all-languages.tar.zip으로 압축 풀기
		     압축 파일명을 phpmyadmin으로 변경
		     systemctl restart named,httpd해서 바뀐거 확인
		     yum -y install php-* --skip 으로 패키지 설치
		     26개 설치 완료 후
		     systemctl restart named,httpd돌리고 firefox 새로고침
		     firefox들어가서 root,itbank 로그인
		     왼쪽 dbitbank눌러서 tbitbank,칼럼 2로 실행
	zero Board : 서버에 설치하여 사용하는 무료 오픈소스 게시판
		    MySQL, PHP 연동 지원
		    http://www.xpressengine.com로 접속 xe자료실로 이동
		    xecore 다운로드
		    ftp로 public_html에 압축파일 다운
		    unzip 파일명으로 압축해제
		    systemctl restart named,httpd돌리고 firefox 새로고침
		    chmod 707 xe 권한 변경으로 설치 계속
		    useritbank, itbank, dbitbank, 방화벽 포트 3306
-------------------------------------------------------------------------------------------------------------------------------------------------
리눅스 시스템 4개 세팅

NS		: 128
Web+Xe		: 129
DB		: 130
Client		: 131

client 가 firefox에서 www.finaltest.com/zero를 조회해서 Xe 연동 작업을 해볼 것

		


